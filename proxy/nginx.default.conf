server {
    listen 80;
    server_name _;
    #redirect c http на https
    return 301 https://$host$request_uri;
}

server {
    include mime.types;

    listen  443 ssl;

    server_name localhost;

    ssl_certificate /ssl/localhost_full.crt;
    ssl_certificate_key /ssl/localhost.key;

    # скрытие серверной информации
    server_tokens off;

    location /api {
        rewrite ^/api(.*) /$1 break;
        proxy_set_header proxied nginx;
        proxy_pass ${SERVER_URL};
    }

     location / {
        proxy_set_header proxied nginx;
        proxy_pass ${CLIENT_URL};
     }

     location ~ /u/(.*) {
        set $id $1;

        if ($id !~ (^[1-9]\d*$)) {
            return 400;
        }

        proxy_pass ${SERVER_URL}/users/$id;
     }

     location /downloads {
        # добавление заголовка на скачивание файла
        add_header Content-Disposition "attachment";
        # корневая директория
        alias /downloads;
        # поиск файла  в /downloads, иначе возвращаем 404
        try_files $uri =404;
     }

     # совпадение префикса
     location /prefix {
        default_type "text/plain;charset=utf-8";
        return 200 'Совпадение префикса - /prefix, /prefixes, /prefix/1';
     }

     # полное совпадение ТОЛЬКО /full_prefix
     location = /full_prefix {
        default_type "text/plain;charset=utf-8";
        return 200 'Полное совпадение ТОЛЬКО /full_prefix';
     }

     # совпадение через регулярное выражение (после regex_prefix цифры от 0 до 9)
     # * отключает чувствительность к регистру
     location *~ /regex_prefix/([1-9]\d*) {
        default_type "text/plain;charset=utf-8";
        set $number $1;
        return 200 'Совпадение через регулярное выражение (после regex_prefix цифры ${number})';
     }
}